@import "compass/reset";
@import "compass/css3";

/* NEW */

/* Color Picker Button */
.sps-colorpicker-button {
    border           : 1px solid gray;
    background-color : tomato;
}

/* The popup window with all the complex layouts */
.sps-colorpicker-window {
    
    // Center field labels
    .x-form-item-label {
        text-align: center;
    }

    // needed for overflow: visible for color map & slider draggers
    // to "break out" of their drag boundaries
    .sps-colopicker-window-container-center {
        overflow: visible;

        >.x-box-inner {
            overflow: visible;

            .sps-colopicker-window-container-mapnfields {
                overflow: visible;

                >.x-box-inner {
                    overflow: visible;
                }
            } // eo .sps-colopicker-window-container-mapnfields

            .sps-colopicker-window-container-hue {
                overflow: visible;

                >.x-box-inner {
                    overflow: visible;
                }
            } // eo .sps-colopicker-window-container-hue

            .sps-colopicker-window-container-saturation {
                overflow: visible;

                >.x-box-inner {
                    overflow: visible;
                }
            } // eo .sps-colopicker-window-container-saturation

            .sps-colopicker-window-container-value {
                overflow: visible;

                >.x-box-inner {
                    overflow: visible;
                }
            } // eo .sps-colopicker-window-container-value

        } // eo >.x-box-inner

    } // eo sps-colopicker-window-container-center

    // main color map for shade selection with draggable circle
    .sps-colorpicker-colormap {
        background-color: red;

        // transparent PNG for shades blending
        .sps-colorpicker-colormap-blender {
            position : absolute;
            top      : 0;
            left     : 0;
            width    : 100%;
            height   : 100%;
        }

        // circle for dragging
        .sps-colorpicker-colormap-draghandle-container {
            overflow : visible;
            z-index  : 1;

            .sps-colorpicker-colormap-draghandle {
                width      : 15px;
                height     : 15px;
                position   : relative;
                left       : -7px;
                top        : -7px; 
                background : url(../../images/colorpicker/drag_circle_black.png);
            }

        } // eo .sps-colorpicker-colormap-draghandle-container

    } // eo .sps-colorpicker-colormap

    // 4 sliders
    .sps-colorpicker-slider {

        .draghandle-container {
            width    : 20px;

            .draghandle-outer {
                .draghandle {
                    width             : 32px;
                    height            : 9px;
                    position          : relative;
                    left              : -6px;
                    top               : -4px;
                    background        : url(../../images/colorpicker/pickerslider.png);
                    background-repeat : no-repeat;
                }
            } // eo .draghandle-outer 

        } // eo .draghandle-container

        &.hue {
            .draghandle-container {
                background: url(../../images/colorpicker/huegradient.png) no-repeat;
            }
        }

        &.saturation {
            .draghandle-container {
                background: -moz-linear-gradient(top, #ffffff 0%, #000000 100%); /* FF3.6+ */
                background: -webkit-linear-gradient(top, #ffffff 0%,#000000 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, #ffffff 0%,#000000 100%); /* Opera 11.10+ */
                background: -ms-linear-gradient(top, #ffffff 0%,#000000 100%); /* IE10+ */
                background: linear-gradient(to bottom, #ffffff 0%,#000000 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
            }
        }

        &.value {
            .draghandle-container {
                background: -moz-linear-gradient(top, #ff0000 0%, #000000 100%); /* FF3.6+ */
                background: -webkit-linear-gradient(top, #ff0000 0%,#000000 100%); /* Chrome10+,Safari5.1+ */
                background: -o-linear-gradient(top, #ff0000 0%,#000000 100%); /* Opera 11.10+ */
                background: -ms-linear-gradient(top, #ff0000 0%,#000000 100%); /* IE10+ */
                background: linear-gradient(to bottom, #ff0000 0%,#000000 100%); /* W3C */
                filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ff0000', endColorstr='#000000',GradientType=0 ); /* IE6-9 */
            }
        }
            
    } // eo .sps-colorpicker-slider

} // eo .sps-colorpicker-window



/* OLD */

/* popup - needed by color picker */

$th-text-color: #333;
$th-border-color: #a7a7a7;
$th-border-shading: #c8c8c8;

$th-outer-border-color: #157fcc;

.th-panel-popup {

    $popup-base-color: #eee;
    $popup-tip-height: 13px;
    $popup-border: 4px solid $th-outer-border-color;
    $popup-border-radius: 5px;

    overflow: visible !important;
    border: $popup-border;
    @include border-radius($popup-border-radius);

    .pointer-mask {
        position: absolute;
        height: $popup-tip-height;
        width: $popup-tip-height * 2;
        top: -$popup-tip-height;
        overflow: hidden;

        &.bottom {
            @include transform(rotateZ(180deg));
            top: 100%;
        }

        &.left {
            @include transform(rotateZ(270deg));
            left: -$popup-tip-height * 1.5;
            top: 0;
        }

        &.right {
            @include transform-origin(25%, 50%);
            @include transform(rotateZ(90deg));
            left: 100%;
            top: 0;
        }

    }

    .pointer {
        position: absolute;
        height: $popup-tip-height * 1.5;
        width: $popup-tip-height * 1.5;
        top: 0;
        left: $popup-tip-height;
        border: $popup-border;
        @include transform(rotateZ(45deg));
        @include transform-origin(0,0);
        background-color: $popup-base-color;
    }

    .content {
        overflow: hidden;
        position: absolute;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        background-color: $popup-base-color;
    }
}



/*COLOR PICKER*/
.th-colorpicker {

    overflow: visible !important;

    // Ivan: this is a terrible rule causing many issues with using native components
    div {
        position: absolute;

        &.x-field-body { // fix to get native fields back to normal
            position: static;
        }
    }

    //This is to fix appearance of Ext4 buttons within colorpicker that have Ext3 Architect style applied to them
    //---
    button {
        padding: 0 !important;
        span {
            margin: 0 !important;
            padding: 0 !important;
        }
    }
    //---

    $borderPadding: 10px;
    $valueRange: 256px;

    //MAP/BAR Area

    $mapHeight: $valueRange;
    $mapWidth: $valueRange;
    $mapTop: $borderPadding;
    $mapLeft: $borderPadding;

    $barHeight: $valueRange;
    $barTop: $borderPadding;
    $barBaseSpace: 40px;
    $barWidth: 22px;

    $barBaseLeft: $mapWidth + $borderPadding + $barBaseSpace - $barWidth;

    .map {
        top: $mapTop;
        left: $mapLeft;
        width: $mapWidth;
        height: $mapHeight;

        canvas {
            position: absolute;
            top:0;
            left:0;
        }
    }

    .barH {
        top: $barTop;
        left: $barBaseLeft;
        width: $barWidth;
        height: $barHeight;
    }

    .barS {
        top: $barTop;
        left: $barBaseLeft + $barBaseSpace;
        width: $barWidth;
        height: $barHeight;
    }

    .barV {
        top: $barTop;
        left: $barBaseLeft + $barBaseSpace * 2;
        width: $barWidth;
        height: $barHeight;
    }

    .barA {
        top: $barTop;
        left: $barBaseLeft + $barBaseSpace * 3;
        width: $barWidth;
        height: $barHeight;
        background-image: url('../images/colorpicker/checkerboard.png');
    }

    .map, .barH, .barS, .barV, .barA {
        border: 1px solid $th-border-color;
        @include box-sizing(border-box);
    }

    .slider .picker-outer {
        height:0;
        width:0;
        position:absolute;
        top:0;
        left:0;
    }
    .slider .picker-inner {
        height:9px;
        width:32px;
        position:absolute;
        top:-4px;
        left:-6px;
        background-image: url('../images/colorpicker/pickerslider.png');

        &:active {
            opacity:0.8;
        }
    }

    //pointer
    .map .picker-outer {
        height:13px;
        width:13px;
        top:0px;
        left:0px;
        border-radius:7px;
        border: 1px solid white;
        margin-left:-7px;
        margin-top:-7px;
    }
    .map .picker-inner {
        height:11px;
        width:11px;
        border-radius:7px;
        border: 1px solid white;
    }


    // Preview Area

    $previewHeight: 45px;
    $previewButtonLeft: $barBaseLeft + $barBaseSpace * 4;

    .preview {
        top: $borderPadding;
        left: $previewButtonLeft;
        width:62px;
        height:$previewHeight * 2 + 2;
        border:1px solid $th-border-color;
        background-image: url('../images/colorpicker/checkerboard.png');

        .new {
            top:0;
            left:0;
            width:60px;
            height: $previewHeight;
        }

        .old {
            top: $previewHeight;
            left:0;
            width:60px;
            height: $previewHeight;
        }
    }

    //buttons
    .buttons {
        top: $borderPadding * 2 + $previewHeight * 2;
        left: $previewButtonLeft;
        width: 68px;
        height: 66px;
    }

    //Label/Field Area

    $hexWidth: 63px;

    .hex {
        left: $borderPadding;
        width: $hexWidth;
    }

    $rgbBaseSpace: $barBaseSpace;
    $rgbBaseLeft: $borderPadding * 2 + $hexWidth;

    $smallFieldWidth: 30px;

    .red {
        left:$rgbBaseLeft;
    }
    .green {
        left:$rgbBaseLeft + $rgbBaseSpace;
    }
    .blue {
        left:$rgbBaseLeft + $rgbBaseSpace * 2;
    }

    .red, .green, .blue {
        width: $smallFieldWidth;
    }


    $hsvBaseLeft: $barBaseLeft - 4;
    $hsvBaseSpace: $barBaseSpace;

    $fieldsTop: $barHeight + $borderPadding;

    .hue {
        left: $hsvBaseLeft;
    }
    .saturation {
        left: $hsvBaseLeft + $hsvBaseSpace;
    }
    .value {
        left: $hsvBaseLeft + $hsvBaseSpace * 2;
    }
    .alpha {
        left: $hsvBaseLeft + $hsvBaseSpace * 3;
    }
    .hue, .saturation, .value, .alpha {
        width: $smallFieldWidth;
    }

    .fields {
        top: $fieldsTop;
    }

    .fields div {

        text-align:center;

        input {
            text-align:center;
            padding: 0px;
        }
    }

/*SWATCH LIBRARY*/

    $libraryTop: $fieldsTop + 59;
    $libraryWidth: 496px;
    $swatchSize: 15px;
    $rowWidth: 419px; //$libraryWidth - ($swatchSize + 4) - 9;
    $paletteBorderColor: #c8c8c8;

    .library {
        position: absolute;
        top: $libraryTop;
        left: $borderPadding;
        width: 100%;

        .label {
            text-align:center;
            width: $hexWidth;
            font-size:11px;
            font-weight: bold;
            color: $th-text-color;
        }


        .button-container {
            left: $libraryWidth - 62;
            top: 15px;
            width: 62px;
            height: 23px;
        }

        .swatches {
            top: 15px;
            width: $libraryWidth;
            height: $swatchSize + 6;

            .swatch-row {
                height: $swatchSize + 4;
                width: $rowWidth;
                border: 2px solid $paletteBorderColor;
                //@include box-shadow(inset 1px 1px 0px $th-border-shading, inset -1px -1px 0px $th-border-shading);
                @include box-sizing(content-box);
                background-image: url('../images/colorpicker/diagonal_lines.png');
                background-color: white;

                .swatch-container {
                    width: $swatchSize;
                    height: $swatchSize;
                    padding: 2px;
                    //position: static;
                    //float: left;
                    border-right: 1px solid $paletteBorderColor;
                    @include box-sizing(content-box);
                    background-color: white;
                }

                .swatch-container:nth-child(21) {
                    border-right: none;
                }

                .swatch-container:active {
                    background-color: $paletteBorderColor;
                }

                .swatch-color {
                    width: $swatchSize;
                    height: $swatchSize;
                }

                .swatch-background {
                    width: $swatchSize;
                    height: $swatchSize;
                    background-image: url('../images/colorpicker/checkerboard.png');
                }
            }
        }
    }
}


/*ANIMS*/

@-webkit-keyframes popIn {
    0% {
        -webkit-transform:scale(0.1,0.1);
    }
    70% {
        -webkit-transform:scale(1.3,1.3);
    }
    100% {
        -webkit-transform:scale(1,1);
    }
}

@-webkit-keyframes dropIn {
    0% {
        -webkit-transform: scale(1.3, 1.3);
    }
    50% {
        -webkit-transform: scale(1.3, 1.3);
    }
    85% {
        -webkit-transform: scale(0.8, 0.8);
    }
    100% {
        -webkit-transform: scale(1,1);
    }
}

@-webkit-keyframes popOut {
    0% {
        -webkit-transform: scale(0.75, 0.75);
    }
    70% {
        -webkit-transform: scale(1.3, 1.3);
    }
    100% {
        -webkit-transform: scale(1, 1);
    }
}

/*DRAGGABLE SWATCH*/

.draggableSwatch {
    width: 20px;
    height: 20px;
    @include box-sizing(content-box !important);
    position: absolute;
    background-image: url('../images/colorpicker/checkerboard.png');
    border: 1px solid $th-border-color;
    z-index: 1000;
    cursor: pointer;

    .draggableColor {
        width: 20px;
        height: 20px
    }
}

.draggableIndicator {
    height: 19px;
    width: 5px;
    position: absolute;
    background-color: #0092f2; //Architect Blue
    z-index: 500;
    top: 17px;
    left: 3px;
    opacity: 0.5;
    @include transition(0.1s);
}

/*COLOR PICKER BUTTON*/

.colorpicker {
    margin-left: 6px;
}

$architect-cpicker-spot-size: 17px;
$th-button-border-color: #c8c8c8;

.AN-colorbtn {

    height: $architect-cpicker-spot-size;
    width: $architect-cpicker-spot-size;
    @include box-shadow(rgba(#fff, .15) 0 1px 0);
    border: 1px solid $th-button-border-color;
    overflow: hidden;
    position: relative;
    background-color: #fff;
    cursor: pointer;
    display: block;
    background-image: url('../images/colorpicker/checkerboard.png');
    @include box-sizing(border-box);
    @include transform(translate3d(0,0,0));

    a {
        display: block !important;
    }
}

$inner-cpicker-spot-size: $architect-cpicker-spot-size - 2;

.AN-colorbtn-rgb {
    width: $inner-cpicker-spot-size;
    height: $inner-cpicker-spot-size;
    //background-color: rgb(200,20,0);
    position: relative;
    top: 0;
    left: 0;
    @include box-sizing(border-box);
    @include transform-origin(0 0 0);
    //@include transform(rotateZ(-45deg) scaleX(1.5) translate( - $inner-cpicker-spot-size/2, -$inner-cpicker-spot-size/4));
}

.AN-colorbtn-rgba {
    width: $inner-cpicker-spot-size;
    height: $inner-cpicker-spot-size;
    display: block;
    pointer-events:none;
    //background-color: rgba(200,20,0,0.6);
    @include box-sizing(border-box);
    position: relative;
}

.AN-colorbtn-unknown {
    width: $inner-cpicker-spot-size;
    height: $inner-cpicker-spot-size;
    vertical-align: bottom;
    font-weight: bold;
    font-size: 10px;
    display: block;
    text-align: right;
    color: red !important;
}

.AN-colorbtn-mask {
    pointer-events:none;
    background-color: white;
    top: 0px;
    left: 0px;
    width: $inner-cpicker-spot-size;
    height: $inner-cpicker-spot-size;
    position: relative;
    display: block;
    opacity: 0;
    @include box-sizing(border-box);

    .x4-btn-over & {
        opacity: 0.1;
    }

    .x4-btn-pressed & {
        background-color: black;
        opacity: 0.1;
    }
}

.x-checkerboard {
    background-image: url('../images/colorpicker/checkerboard.png');
}
